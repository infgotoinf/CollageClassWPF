<!-- Определение главного окна приложения. 
     x:Class указывает на связанный C#-класс MainWindow внутри пространства имён WpfApp1.
     xmlns — стандартные пространства имён XAML и WPF.
     Title — заголовок окна.
     Height и Width — размеры окна по умолчанию. -->
<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="800">

    <!-- Раздел ресурсов, которые можно переиспользовать в пределах данного окна.
         Здесь можно определить кисти, стили, шаблоны и другие объекты. -->
    <Window.Resources>

        <!-- Создание ресурса SolidColorBrush (однотонная заливка).
             Ключ 'PrimaryBrush' позволяет использовать эту кисть по ссылке в других элементах.
             Цвет задается в формате ARGB: FF (непрозрачный), 88C0D0 — голубой. -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="MediumPurple"/>

        <!-- Определение линейного градиента, который будет использоваться, например, для фона панели.
             Градиент переходит от 'LightBlue' к 'Blue' по диагонали от верхнего левого до нижнего правого угла. -->
        <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="Red" Offset="0"/>
            <GradientStop Color="Orange" Offset="0.14"/>
            <GradientStop Color="Yellow" Offset="0.29"/>
            <GradientStop Color="LimeGreen" Offset="0.57"/>
            <GradientStop Color="Cyan" Offset="0.71"/>
            <GradientStop Color="Blue" Offset="0.86"/>
            <GradientStop Color="Purple" Offset="1"/>
        </LinearGradientBrush>

        <!-- Стиль для кнопок.
             x:Key — имя стиля. TargetType — применим к элементам типа Button. -->
        <Style x:Key="FancyButtonStyle" TargetType="Button">
            <!-- Устанавливает белый цвет текста на кнопке -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Устанавливает фон кнопки — кисть, заданная ранее как PrimaryBrush -->
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <!-- Делает шрифт текста жирным
            <Setter Property="FontWeight" Value="Bold"/> -->
            <!-- Добавляет отступ внутри кнопки со всех сторон по 10 пикселей -->
            <Setter Property="Padding" Value="10"/>

            <!-- Полное переопределение визуального представления кнопки -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Элемент Border используется как оболочка кнопки.
                             Задает фон (Background), границу (BorderBrush), толщину (BorderThickness) и скругление углов (CornerRadius). -->
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="DarkSlateGray" 
                                BorderThickness="2" 
                                CornerRadius="5">
                            <!-- ContentPresenter отвечает за отображение содержимого кнопки (текста или другого вложенного контента),
                                 центрируется по горизонтали и вертикали. -->
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>

                        <!-- Триггер реагирует на наведение мыши (IsMouseOver=True).
                             Меняет фон кнопки на темно-синий при наведении. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkSlateBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkViolet"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataTemplate определяет, как визуально отображать каждый элемент в ListBox.
             Элементы будут представлять собой горизонтальную панель с зеленым кружком и текстом. -->
        <DataTemplate x:Key="ItemTemplate">
            <StackPanel Orientation="Horizontal">
                <!-- Маленький круг (Ellipse) 10x10 пикселей, зеленого цвета.
                     Margin="0,0,5,0" — отступ справа 5 пикселей, чтобы отделить от текста. -->
                <Ellipse Width="10" Height="10" Fill="Green" Margin="0,0,5,0"/>

                <!-- Отображение текста, полученного через привязку данных. 
                     По умолчанию это будет результат ToString() от объекта в ListBox. -->
                <TextBlock Text="{Binding}" />
            </StackPanel>
        </DataTemplate>

    </Window.Resources>

    <!-- DockPanel — контейнер, который позволяет "пристыковывать" дочерние элементы к сторонам окна.
         Последний элемент (без DockPanel.Dock) заполняет оставшееся пространство, если LastChildFill=True. -->
    <DockPanel LastChildFill="True">

        <!-- Верхняя панель: Border используется для оформления заголовка.
             Высота фиксирована 50 пикселей.
             Background задается как градиент, определённый ранее (HeaderBrush).
             DockPanel.Dock="Top" — прикрепление к верхней границе окна. -->
        <Border Background="{StaticResource HeaderBrush}" Height="50" DockPanel.Dock="Top">
            <!-- TextBlock — простой элемент для отображения текста.
                 Текст выравнивается по центру как по вертикали, так и по горизонтали.
                 Белый цвет шрифта и размер 20. -->
            <TextBlock Text="WPF Пример" 
                       FontSize="20" 
                       Foreground="White" 
                       VerticalAlignment="Center" 
                       FontWeight="Bold"
                       HorizontalAlignment="Center"/>
        </Border>

        <!-- Боковая панель слева: StackPanel размещает кнопки вертикально.
             Ширина панели 200 пикселей, фон — светло-серый.
             DockPanel.Dock="Left" — прикрепление к левой границе окна. -->
        <StackPanel Width="200" Background="LightGray" DockPanel.Dock="Right">
            <!-- Кнопка с применением пользовательского стиля, заданного ранее.
                 Margin="5" — внешний отступ со всех сторон.
                 Content — текст, отображаемый на кнопке. -->
            <Button Style="{StaticResource FancyButtonStyle}" Margin="5" Content="Кнопка 1"/>
            <Button Style="{StaticResource FancyButtonStyle}" Margin="5" Content="Кнопка 2"/>
        </StackPanel>

        <!-- Основная зона окна: Grid — контейнер для позиционирования вложенных элементов.
             Фон белый. -->
        <Grid Background="White">

            <!-- Canvas — холст, где элементы размещаются по координатам.
                 Используется для абсолютного позиционирования. -->
            <Canvas>
                <!-- Прямоугольник 100x100 пикселей, заливка — светло-коралловая.
                     Позиция: отступ слева 20 пикселей, сверху 30 пикселей. -->
                <Rectangle Width="100" Height="100" Fill="LightCoral" Canvas.Right="20" Canvas.Top="30"/>

                <!-- Круг (эллипс) 80x80 пикселей, зеленый.
                     Позиция: отступ слева 150, сверху 60 пикселей. -->
                <Ellipse Width="80" Height="80" Fill="LightGreen" Canvas.Left="250" Canvas.Top="150"/>
            </Canvas>

            <!-- ListBox — список элементов.
                 Ширина 200, высота 100, отступ 10 пикселей от краев.
                 ItemTemplate определяет внешний вид каждого элемента.
                 Размещен внизу слева (VerticalAlignment и HorizontalAlignment). -->
            <ListBox x:Name="listBox1"
                     Width="200"
                     Height="100"
                     Margin="10"
                     ItemTemplate="{StaticResource ItemTemplate}"
                     VerticalAlignment="Bottom"
                     HorizontalAlignment="Left">
            </ListBox>

        </Grid>

    </DockPanel>
</Window>
